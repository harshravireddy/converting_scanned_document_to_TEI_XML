# -*- coding: utf-8 -*-
"""edelmetallpruefer_1938_pruefungsanforderungen_TEI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qKHAqaYrKvNnxqQNziYQB_fu7degG4yS
"""

from bs4 import BeautifulSoup
import re

# Read the HOCR file
with open("/content/combined_hocr_edel.hocr", "r", encoding="utf-8") as file:
    hocr_content = file.read()

# Parse the HOCR content
soup = BeautifulSoup(hocr_content, "html.parser")

# Define a list of target IDs
target_ids = ["bbox 319 245 1612 659", "bbox 407 925 1522 1180"]

# Initialize a variable to store the extracted text
title_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        title_text += div.get_text(strip=True) + "\n"

# Find the div with class "ocr_carea" and title attribute containing "bbox 698 2360 1302 2439"
div_date_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 698 2360 1302 2439" in value)

# Extract text from the second div with the specified format (\d+,\s\w+\s\d+)
if div_date_tag:
    date_text = ""
    text = div_date_tag.get_text(strip=True)
    match = re.search(r"(\b\d{1,2},\s\w+\s\d{4}\b)", text)
    if match:
        date_text = match.group(1)
else:
    date_text = ""

# Find the div with class "ocr_carea" and title attribute containing "bbox 285 2686 1759 2790"
div_place_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 285 2686 1759 2790" in value)

place_text = ""

# Extract text from the found div
if div_place_tag:
    text = div_place_tag.get_text(strip=True)
    # Match both "Leipzig" and "Berlin" using regular expression
    matches = re.findall(r'\b(?:Leipzig|Berlin)\b', text)
    if matches:
        place_text = " und ".join(matches)  # Join the matches with " und " in between

# Find the div with class "ocr_carea" and title attribute containing "bbox 285 2686 1759 2790"
div_org_name_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 285 2686 1759 2790" in value)

# Extract text from the third div with the specified format for orgName
if div_org_name_tag:
    org_name_text = ""
    text = div_org_name_tag.get_text(strip=True)
    match = re.search(r"B,\sG,\sTeubner", text)
    if match:
        org_name_text = match.group(0)
else:
    org_name_text = ""

 #Define a list of target IDs
target_ids = ["bbox 274 257 1896 372", "bbox 716 370 1822 559"]

# Initialize a variable to store the extracted text
h1_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        h1_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p1 attribute containing "bbox 1274 556 1923 692"
div_p1_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 1274 556 1923 692" in value)

# Extract text from the first div
if div_p1_tag:
    p1_text = div_p1_tag.get_text(strip=True)
else:
    p1_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 269 702 1845 792"
div_h2_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 269 702 1845 792" in value)

# Extract text from the first div
if div_h2_tag:
    h2_text = div_h2_tag.get_text(strip=True)
else:
    h2_text = ""
 #Define a list of target IDs
target_ids = ["bbox 587 807 1897 1175", "bbox 571 1543 1885 2188"]

# Initialize a variable to store the extracted text
p2_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p2_text += div.get_text(strip=True) + "\n"

# Find the div with class "ocr_carea" and p3 attribute containing "bbox 267 1258 1887 1333"
div_h3_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 267 1258 1887 1333" in value)

# Extract text from the first div
if div_h3_tag:
    h3_text = div_h3_tag.get_text(strip=True)
else:
    h3_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 259 1364 559 1431"
div_h4_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 259 1364 559 1431" in value)

# Extract text from the first div
if div_h4_tag:
    h4_text = div_h4_tag.get_text(strip=True)
else:
    h4_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 580 1364 1885 1547"
div_p3_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 580 1364 1885 1547" in value)

# Extract text from the first div
if div_p3_tag:
    p3_text = div_p3_tag.get_text(strip=True)
else:
    p3_text = ""

# Find the div with class "ocr_carea" and p3 attribute containing "bbox 276 2555 547 2625"
div_h5_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 276 2555 547 2625" in value)

# Extract text from the first div
if div_h5_tag:
    h5_text = div_h5_tag.get_text(strip=True)
else:
    h5_text = ""
# Find the div with class "ocr_carea" and p2 attribute containing "bbox 565 2187 1883 2929"
div_p4_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 565 2187 1883 2929" in value)

# Extract text from the first div
if div_p4_tag:
    p4_text = div_p4_tag.get_text(strip=True)
else:
    p4_text = ""
# Define a list of target IDs
target_ids = ["bbox 319 245 1612 659", "bbox 407 925 1522 1180"]

# Initialize a variable to store the extracted text
h6_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        h6_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 151 587 1018 776"
div_p5_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 151 587 1018 776" in value)

# Extract text from the first div
if div_p5_tag:
    p5_text = div_p5_tag.get_text(strip=True)
else:
    p5_text = ""

# Find the div with class "ocr_carea" and p3 attribute containing "bbox 798 1357 1123 1410"
div_p6_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 798 1357 1123 1410" in value)

# Extract text from the first div
if div_p6_tag:
    p6_text = div_p6_tag.get_text(strip=True)
else:
    p6_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 286 1445 1722 1583"
div_p7_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 286 1445 1722 1583" in value)

# Extract text from the first div
if div_p7_tag:
    p7_text = div_p7_tag.get_text(strip=True)
else:
    p7_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 715 1637 1231 1876"
div_p8_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 715 1637 1231 1876" in value)

# Extract text from the first div
if div_p8_tag:
    p8_text = div_p8_tag.get_text(strip=True)
else:
    p8_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 378 1916 1628 2088"
div_p9_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 378 1916 1628 2088" in value)

# Extract text from the first div
if div_p9_tag:
    p9_text = div_p9_tag.get_text(strip=True)
else:
    p9_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 698 2360 1302 2439"
div_p10_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 698 2360 1302 2439" in value)

# Extract text from the first div
if div_p10_tag:
    p10_text = div_p10_tag.get_text(strip=True)
else:
    p10_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 285 2686 1759 2790"
div_p11_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 285 2686 1759 2790" in value)

# Extract text from the first div
if div_p11_tag:
    p11_text = div_p11_tag.get_text(strip=True)
else:
    p11_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 282 181 1833 398"
div_h7_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 282 181 1833 398" in value)

# Extract text from the first div
if div_h7_tag:
    h7_text = div_h7_tag.get_text(strip=True)
else:
    h7_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 877 410 1838 604"
div_p12_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 877 410 1838 604" in value)

# Extract text from the first div
if div_p12_tag:
    p12_text = div_p12_tag.get_text(strip=True)
else:
    p12_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 283 623 1218 706"
div_h8_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 283 623 1218 706" in value)

# Extract text from the first div
if div_h8_tag:
    h8_text = div_h8_tag.get_text(strip=True)
else:
    h8_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 555 722 1836 1072"
div_p13_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 555 722 1836 1072" in value)

# Extract text from the first div
if div_p13_tag:
    p13_text = div_p13_tag.get_text(strip=True)
else:
    p13_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 278 1157 1750 1239"
div_h9_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 278 1157 1750 1239" in value)

# Extract text from the first div
if div_h9_tag:
    h9_text = div_h9_tag.get_text(strip=True)
else:
    h9_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 276 1257 1832 2328"
div_l1_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 276 1257 1832 2328" in value)

# Extract text from the first div
if div_l1_tag:
    l1_text = div_l1_tag.get_text(strip=True)
else:
    l1_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 280 2342 1822 2755"
div_l2_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 280 2342 1822 2755" in value)

# Extract text from the first div
if div_l2_tag:
    l2_text = div_l2_tag.get_text(strip=True)
else:
    l2_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 378 258 1061 355"
div_h10_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 378 258 1061 355" in value)

# Extract text from the first div
if div_h10_tag:
    h10_text = div_h10_tag.get_text(strip=True)
else:
    h10_text = ""
target_ids = ["bbox 376 398 2083 1399", "bbox 379 1430 2072 1507", "bbox 383 1540 1083 1609"]

# Initialize a variable to store the extracted text
p14_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p14_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 380 1814 1151 2054"
div_h11_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 380 1814 1151 2054" in value)

# Extract text from the first div
if div_h11_tag:
    h11_text = div_h11_tag.get_text(strip=True)
else:
    h11_text = ""

target_ids = ["bbox 460 2105 2083 2323", "bbox 464 2321 2078 2501", "bbox 1110 2441 2083 2532","bbox 466 2534 776 2600"]

# Initialize a variable to store the extracted text
p15_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p15_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 387 2700 1309 2805"
div_h12_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 387 2700 1309 2805" in value)

# Extract text from the first div
if div_h12_tag:
    h12_text = div_h12_tag.get_text(strip=True)
else:
    h12_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 461 2844 2077 3033"
div_p16_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 461 2844 2077 3033" in value)

# Extract text from the first div
if div_p16_tag:
    p16_text = div_p16_tag.get_text(strip=True)
else:
    p16_text = ""

target_ids = ["bbox 304 181 1890 301", "bbox 306 295 1888 408", "bbox 308 429 491 511"]

# Initialize a variable to store the extracted text
p17_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p17_text += div.get_text(strip=True) + "\n"

# Find the div with class "ocr_carea" and p3 attribute containing "bbox 234 588 1888 1232"
div_p18_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 234 588 1888 1232" in value)

# Extract text from the first div
if div_p18_tag:
    p18_text = div_p18_tag.get_text(strip=True)
else:
    p18_text = ""
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 236 1431 1538 1522"
div_h13_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 236 1431 1538 1522" in value)

# Extract text from the first div
if div_h13_tag:
    h13_text = div_h13_tag.get_text(strip=True)
else:
    h13_text = ""
target_ids = ["bbox 240 1593 1876 2014", "bbox 314 2031 1873 2112"]

# Initialize a variable to store the extracted text
l4_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        l4_text += div.get_text(strip=True) + "\n"
target_ids = ["bbox 228 2228 1867 2539", "bbox 317 2552 1865 2720", "bbox 1644 2762 1865 2821","bbox 319 2665 1650 2861","bbox 320 2884 1101 2967"]

# Initialize a variable to store the extracted text
l5_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        l5_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 376 245 947 326"
div_h14_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 376 245 947 326" in value)

# Extract text from the first div
if div_h14_tag:
    h14_text = div_h14_tag.get_text(strip=True)
else:
    h14_text = ""

target_ids = ["bbox 454 395 1697 471", "bbox 841 521 1680 1259"]

# Initialize a variable to store the extracted text
p19_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p19_text += div.get_text(strip=True) + "\n"
target_ids = ["bbox 384 1481 2061 1793", "bbox 388 1807 2060 1993"]

# Initialize a variable to store the extracted text
p20_text = ""

# Loop over each target ID
for target_id in target_ids:
    # Find the div element with the specified class and title
    div = soup.find("div", class_="ocr_carea", title=lambda value: value and target_id in value)

    # Extract text from the div if found
    if div:
        p20_text += div.get_text(strip=True) + "\n"
# Find the div with class "ocr_carea" and p3 attribute containing "bbox 388 2033 2071 2460"
div_p21_tag = soup.find("div", class_="ocr_carea", title=lambda value: value and "bbox 388 2033 2071 2460" in value)

# Extract text from the first div
if div_p21_tag:
    p21_text = div_p21_tag.get_text(strip=True)
else:
    p21_text = ""
# Create TEI XML document
tei_xml = f"""
<TEI>
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>{title_text}</title>
        <author>
          <persName></persName>
          <orgName>{org_name_text}</orgName>
        </author>
      </titleStmt>
      <publicationStmt>
        <publPlace>{place_text}</publPlace>
        <date>{date_text}</date>
      </publicationStmt>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
    <div type="heading">
        <head>{h1_text}</head>
        <!-- Paragraph -->
        <p>{p1_text}</p>
        </div>
        <div type="subheading">
        <head>{h2_text}</head>
        <p>{p2_text}</p>
        <head>{h3_text}</head>
        <head>{h4_text}</head>
        <p>{p3_text}</p>
        <head>{h5_text}</head>
        <p>{p4_text}</p>
      </div>
      <div type="heading">
      <head>{h6_text}</head>
        <p>{p5_text}</p>
        <p>{p6_text}</p>
        <p>{p7_text}</p>
        <p>{p8_text}</p>
        <p>{p9_text}</p>
        <p>{p10_text}</p>
        <p>{p11_text}</p>
      </div>
      <div type="heading">
        <head>{h7_text}</head>
        <!-- Paragraph -->
        <p>{p12_text}</p>
        </div>
        <div type="subheading">
        <head>{h8_text}</head>
        <p>{p13_text}</p>
        <head>{h9_text}</head>
        <list type="number">
        <item n='1'>{l1_text}</item>
        <item n='2'>{l2_text}</item>
        </list>
        </div>
        <div type="heading">
        <head>{h10_text}</head>
        <!-- Paragraph -->
        <p>{p14_text}</p>
        </div>
        <div type="subheading">
        <head>{h11_text}</head>
        <p>{p15_text}</p>
        <head>{h12_text}</head>
        <p>{p16_text}</p>
        </div>
        <div>
        <p>{p17_text}</p>
        <p>{p18_text}</p>
        <head>{h13_text}</head>
        <list type="number">
        <item n='1'>{l3_text}</item>
        <item n='2'>{l4_text}</item>
        </list>
        </div>
        <div>
        <head>{h14_text}</head>
        <p>{p19_text}</p>
        <p>{p20_text}</p>
        <p>{p21_text}</p>
        </div>
    </body>
  </text>
</TEI>
"""

# Write TEI XML document to file
with open("output_edel.tei.xml", "w", encoding="utf-8") as file:
    file.write(tei_xml)